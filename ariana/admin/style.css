* {
    padding: 0;
    margin: 0;
    font-family: sans-serif;
    text-decoration: none;
    border: none;
    outline: none;
    box-sizing: border-box;
    color: var(--fcol1);
}

body {
    /* display: none; */
    display: grid;
    grid: min-content 1fr min-content / min-content 1fr max-content min-content min-content;
    width: 100vw;
    height: 100vh;
    max-width: 100vw;
    max-height: 100vh;
    overflow: hidden;
    align-items: center;
    font-size: .85rem;
    gap: 15px;
    padding: 15px;

    /* carbon */
    background: var(--bback);
    background-color: var(--bcol1);
    background-size: 20px 20px;

    /* carbon fibre */
    /* background:
        radial-gradient(black 15%, transparent 16%) 0 0,
        radial-gradient(black 15%, transparent 16%) 8px 8px,
        radial-gradient(rgba(255, 255, 255, .1) 15%, transparent 20%) 0 1px,
        radial-gradient(rgba(255, 255, 255, .1) 15%, transparent 20%) 8px 9px;
    background-color: #282828;
    background-size: 16px 16px; */
}

body[theme=light] {
    --bcol1: #f3f3f3;
    --bcol2: #cacaca77;
    --bcol3: #ccc;
    --bcol4: #bfbfbf;
    --bordercol2: #cccccc;
    --bordercol3: #afafaf;
    --bordercol4: #888;
    --fcol1: #000;
    --statusActive: green;
    --statusInactive: darkorange;
    color-scheme: light;

    --bback: linear-gradient(27deg, #f5f5f5 5px, transparent 5px) 0 5px,
        linear-gradient(207deg, #f5f5f5 5px, transparent 5px) 10px 0px,
        linear-gradient(27deg, #eee 5px, transparent 5px) 0px 10px,
        linear-gradient(207deg, #eee 5px, transparent 5px) 10px 5px,
        linear-gradient(90deg, #fbfbfb 10px, transparent 10px),
        linear-gradient(#fdfdfd 25%, #fafafa 25%, #fafafa 50%, transparent 50%, transparent 75%, #e4e4e4 75%, #e4e4e4);
}

body[theme=dark] {
    --bcol1: #131313;
    --bcol2: #3a3a3a99;
    --bcol3: #444;
    --bcol4: #4f4f4f;
    --bordercol2: #3c3c3c;
    --bordercol3: #555;
    --bordercol4: #4a4a4a;
    --fcol1: #fff;
    --statusActive: lime;
    --statusInactive: orange;
    color-scheme: dark;

    --bback: linear-gradient(27deg, #151515 5px, transparent 5px) 0 5px,
        linear-gradient(207deg, #151515 5px, transparent 5px) 10px 0px,
        linear-gradient(27deg, #222 5px, transparent 5px) 0px 10px,
        linear-gradient(207deg, #222 5px, transparent 5px) 10px 5px,
        linear-gradient(90deg, #1b1b1b 10px, transparent 10px),
        linear-gradient(#1d1d1d 25%, #1a1a1a 25%, #1a1a1a 50%, transparent 50%, transparent 75%, #242424 75%, #242424);
}

::-webkit-scrollbar {
    width: 5px;
    height: 5px;
}

::-webkit-scrollbar-track {
    background-color: transparent;
    margin-top: 40px;
}

::-webkit-scrollbar-thumb {
    background-color: var(--bcol4);
    border-radius: 999px;
    border: 1px solid var(--bordercol4);
}

::-webkit-scrollbar-corner,
::-webkit-scrollbar-button {
    display: none;
}

body>* {
    border-radius: 10px;
    background-color: var(--bcol2);
    padding: 10px;
    backdrop-filter: blur(2px);
    border: 1px solid var(--bordercol2);
}

button:not(.floating),
input,
.btn {
    border-radius: 5px;
    background-color: var(--bcol3);
}

button,
.btn {
    cursor: pointer;
    padding: 8px;
    user-select: none;
}

input {
    padding: 5px;
    /* color-scheme: dark*/
}

button:not(.floating):hover,
input:hover,
input:focus,
.btn:hover {
    background-color: var(--bcol4);
}

input:focus {
    outline: 2px solid var(--bordercol3);
}

input[readonly] {
    all: unset;
    pointer-events: none;
    user-select: none;
}

.icon-btn {
    display: inline-flex;
    gap: 5px;
    place-items: center;
}

.icon-btn>svg,
.icon>svg {
    width: 20px;
    aspect-ratio: 1;
}

button[busy] {
    pointer-events: none;
    filter: contrast(1.15);
}

button[busy]>svg {
    display: none;
}

button[busy]::before {
    width: 20px;
    aspect-ratio: 1;
    scale: 1.25;
    line-height: 20px;
    display: inline-block;
}

button[busy='']::before {
    content: '⏳';
    animation: rotate-infinite 1s linear infinite;
}

button[busy=success]::before {
    content: '✔️';
}

button[busy=error]::before {
    content: '❌';
}

@keyframes rotate-infinite {
    from {
        rotate: 0deg;
    }

    to {
        rotate: 360deg;
    }
}

.logo {
    all: unset;
    width: 120px;
    height: 58px;
    cursor: pointer;
}

.tab-container {
    display: flex;
    gap: 10px;
    overflow: hidden;
    min-width: max-content;
}

.toggle>input {
    display: none;
}

.tab.toggle:has(input:checked) {
    border-bottom: 3px solid red;
}

.tab {
    min-width: fit-content;
}

.tab-container:has(.tab[users-tab]>input:not(:checked))~.users-search-container {
    display: none !important;
}

.tab-container:has(.tab[attendance-tab]>input:not(:checked))~.attendance-search-container {
    display: none !important;
}

.user-access-spacing {
    all: unset
}

.tab-container:has(.tab[user-access-tab]>input:not(:checked))~.user-access-spacing {
    display: none !important;
}

.main-tab-container,
.footer {
    grid-column: 1 / 6;
}

.main-tab-container {
    height: 100%;
    display: flex;
    overflow-x: hidden;
    scroll-snap-type: x mandatory;
    scroll-padding-inline: 10px;
    font-size: .8rem;
    gap: 10px;
}

.main-tab {
    flex-shrink: 0;
    height: 100%;
    width: 100%;
    scroll-snap-align: start;
    scroll-snap-stop: always;
    scroll-behavior: smooth;
    overflow: hidden;
}

.main-tab.users {
    display: grid;
    grid-auto-rows: 1fr min-content;
    align-items: flex-start;
    gap: 20px;
}

.users-data-container {
    height: 100%;
    overflow: overlay;
}

.users-data-container:has(tbody:empty) {
    overflow: hidden;
}

.footer {
    text-align: center;
    font-size: .75rem;
    color: #888;
}

table {
    border-spacing: 5px;
    border-collapse: collapse;
    width: fit-content;
    counter-reset: c;
    max-height: 100%;
}

table:where(.users-data, .attendance-data)>tbody:empty {
    position: relative;
}

table:where(.users-data, .attendance-data)>tbody:empty::before {
    content: url('assets/image/no-data.svg');
    margin-top: 40px;
    width: 350px;
    text-align: center;
    position: absolute;
    left: 50%;
    translate: -50% 0;
    filter: grayscale(1) brightness(1.5) opacity(0.75) drop-shadow(0 1px 1px black);
}

thead {
    position: relative;
}

table:where(.users-data, .attendance-data)::after {
    display: table-caption;
    padding: 5px 0;
    border-radius: 999px;
    text-align: center;
    margin-top: 10px;
    font-style: italic;
    text-decoration: underline;
    text-underline-offset: 5px;
    color: #999;
    letter-spacing: 1px;
    caption-side: bottom;
}

table:where(.users-data, .attendance-data)[search]::after {
    content: attr(search);
}

.users-data tbody>tr {
    counter-increment: c;
}

.users-data td:first-child::before {
    content: counter(c) ".";
    color: #888;
    font-weight: bold;
    display: inline-block;
    min-width: 2ch;
}

.users-data tr:focus-within>td:first-child::before {
    content: '\0025B7';
    color: coral;
}

.users-data tr:focus-within {
    /* border-color: coral;
    border-style: solid;
    border-width: 1px 0; */
    box-shadow: 0 2px 0 0 lightcoral, 0 -2px 0 0 lightcoral;
}

table:where(.users-data, .attendance-data)>thead {
    position: sticky;
    top: 0;
    background-color: var(--bcol2);
    filter: drop-shadow(0 2px 5px var(--bcol1));
    box-shadow: 0 1px 0 0 var(--bordercol4);
}

td,
th {
    padding: 3px 5px;
}

table:where(.users-data, .attendance-data)>thead th {
    padding-block: 10px;
    text-shadow: 0 0 25px var(--bcol1);
}

td:not(:last-child):not(:empty),
th:not(:last-child):not(:empty) {
    border-right: 1px solid var(--bordercol4);
}

th {
    color: #888;
    min-width: 120px;
}

.add-user th {
    border-bottom: 1px solid var(--bordercol4);
}

th[dp] {
    min-width: 0;
}

td>input,
td>select {
    width: 100%;
    /* width: max(100%, 120px); */
}

.actions-container {
    display: inline-flex;
    width: max-content;
    gap: 8px;
}

.users-data td:first-child,
.users-data th:first-child {
    min-width: 0px;
    width: 0px;
    padding: 0;
}

.uid {
    min-width: 10ch;
    text-align: center;
}

.status {
    font-weight: bold;
}

.status:has([value=Active]:checked) {
    color: var(--statusActive);
}

.status:has([value=Inactive]:checked) {
    color: var(--statusInactive);
}

.flex-row,
.flex-column {
    display: flex;
    place-items: center;
    gap: 5px;
}

.flex-column {
    flex-direction: column;
    gap: 20px;
}

svg.red>use {
    color: red;
}

.floating {
    background-color: unset !important;
    border-radius: 0;
    outline: none !important;
    padding: 3px 6px;
}

input.floating {
    border-bottom: 1px solid #555;
}

.theme>svg {
    display: none;
    width: 20px;
    aspect-ratio: 1;
}

.theme>input:checked~svg[dark] {
    display: block;
}

.theme>input:not(:checked)~svg[light] {
    display: block;
}

.user-access {
    display: flex;
    flex-direction: column;
    gap: 30px;
    place-items: center;
    padding: 20px;
    overflow: hidden;
}

.udp {
    width: 200px;
    aspect-ratio: 1;
    border-radius: 999px;
    cursor: pointer;
    z-index: 10;
    transition: .2s;
    transform-origin: top center;
}

.udp:focus {
    scale: 2;
    border-radius: 5px;
    pointer-events: none;
}

.uname {
    font-size: 1.7rem;
}

.uexpire,
.access-status {
    color: var(--c, green);
    font-weight: bold;
}

.access-status {
    border: 2px solid var(--c, green);
    padding: 10px;
    border-radius: 5px;
}

.access-status::before {
    content: var(--access-content, 'Access Granted');
}

.user-container>:where(.access-status, .uexpire):where([expired], [justgotaccess]) {
    --c: red;
    --access-content: 'Access Denied';
}

.profile-picture {
    width: max-content;
}

.profile-picture::before,
.attendance-data img {
    height: 35px;
    aspect-ratio: 1;
    border-radius: 999px;
    transition: .2s;
    cursor: pointer;
}

.profile-picture::before {
    content: var(--fname);
    display: inline-block;
    background-image: var(--furl, var(--default-img));
    background-repeat: no-repeat;
    background-size: contain;
    background-position: center;
    color: transparent;
    pointer-events: none;
}

.profile-picture.invalid::before {
    content: unset;
}

.add-user .profile-picture::before {
    transform-origin: bottom right;
}

.users-data .profile-picture::before,
.attendance-data img {
    transform-origin: top left;
}

.profile-picture:hover::before,
.attendance-data img:focus {
    scale: 5;
    border-radius: 1px;
    pointer-events: none;
}

.profile-picture::after {
    white-space: pre;
    font-size: .75rem;
}

.add-user .profile-picture::after {
    content: var(--fname, 'Choose Image') '\a' var(--fsize, '');
    text-overflow: ellipsis;
    max-width: 150px;
    overflow-x: hidden;
    /* -webkit-line-clamp: 2;
    display: -webkit-box;
    -webkit-box-orient: vertical; */
}

.users-data .profile-picture::after {
    content: var(--fname, var(--invalid)) '\a' var(--fsize);
}

.profile-picture.invalid {
    animation: blink-red .5s;
}

.profile-picture.invalid::after {
    content: 'Invalid File';
}

@keyframes blink-red {
    0% {
        background-color: red;
    }

    25% {
        background-color: white;
    }

    60% {
        background-color: red;
    }

    85% {
        background-color: white;
    }

    100% {
        background-color: red;
    }
}

input:where([type=search], [type=text]):invalid {
    color: red;
    caret-color: var(--fcol1);
    background-color: rgba(200, 0, 0, 0.2);
}

.users-search-container,
.attendance-search-container {
    height: 100%;
}