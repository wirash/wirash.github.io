:root {
  --color0: #555;
  --color1: #000;
  --color2: #fff;
  --color3: #888;

  --mborder: 1px solid var(--color3);
  --mcinput: hidden;
  --grid-h: 3;
  --grid-v: 4;
  --pmargin: 1cm;
  --fsize: 7pt;
  --awidth: 0.1rem;
  --asize: 0.25rem;
}

* {
  box-sizing: border-box;
}

body {
  display: grid;
  place-items: center;
  background-color: rgb(204, 204, 204);
  font-family: sans-serif;
  scroll-behavior: smooth;
}

page {
  background: #fff;
  margin: 0 0 0.5cm 0;
  box-shadow: 0 0 0.5cm rgba(0, 0, 0, 0.5);
}

page .maquettecontainer {
  display: grid;
  place-items: center;
  margin: var(--pmargin);
  --rgp: 20pt;
  margin-top: calc(var(--pmargin) + var(--rgp) + var(--fsize));
  row-gap: max(10px, var(--rgp) + var(--fsize));
  column-gap: 10px;
  transition: 0.3s;
  /* overflow: hidden; */
  width: calc(100% - (2 * var(--pmargin)));
  height: calc(100% - (2 * var(--pmargin)) - var(--rgp) - var(--fsize));
}

page[layout="portrait"] .maquettecontainer {
  grid: repeat(var(--grid-v), minmax(0, 1fr)) / repeat(
      var(--grid-h),
      minmax(0, 1fr)
    );
}

page[layout="landscape"] .maquettecontainer {
  grid: repeat(var(--grid-h), minmax(0, 1fr)) / repeat(
      var(--grid-v),
      minmax(0, 1fr)
    );
}

page[size="A4"][layout="portrait"] {
  width: 21cm;
  height: 29.7cm;
}
page[size="A4"][layout="landscape"] {
  width: 29.7cm;
  height: 21cm;
}
page[size="A3"][layout="portrait"] {
  width: 29.7cm;
  height: 42cm;
}
page[size="A3"][layout="landscape"] {
  width: 42cm;
  height: 29.7cm;
}

@media print {
  body,
  page {
    background-color: #fff;
    margin: 0;
    box-shadow: unset;
  }

  .settings_container,
  #page-count,
  #instructions {
    display: none !important;
  }

  .maquette > input,
  .maquette[default] {
    display: none !important;
  }

  .c > div:empty {
    display: none !important;
  }
}

.maquette {
  aspect-ratio: 1;
  position: relative;
  outline: var(--mborder);
  justify-content: center;
  gap: 10px;
  min-width: 0;
  min-height: 0;
}

.maquette > button {
  border-radius: 5px;
  background-color: transparent;
  cursor: pointer;
  padding: 5px 10px;
}

.maquette > button:hover {
  background-color: var(--color1) !important;
  color: var(--color2) !important;
}

.maquette > button:first-child {
  place-self: flex-end;
}
.maquette > button:last-child {
  place-self: flex-start;
}

page[layout="portrait"] .maquette {
  /* width: 100%; */
  height: 100%;
}

page[layout="landscape"] .maquette {
  height: 100%;
}

.maquette > .content {
  width: 100%;
  height: 100%;
  position: relative;
  display: grid;
  place-items: center;
  pointer-events: none;
  font-size: calc(var(--fsize) + 2pt);
}

.content::before {
  content: attr(type);
  padding: 20px;
  pointer-events: auto;
  cursor: pointer;
}
.content::after {
  content: attr(name);
  position: absolute;
  bottom: calc(100% + 2px);
  text-decoration: underline;
  font-weight: bold;
  transform: translateZ(-1px);
}

.maquette > .content > * {
  pointer-events: auto;
}

.maquette .c {
  display: inline-block;
  width: 27.5%;
  aspect-ratio: 1;
  border-width: 3px;
  border-style: solid;
  position: absolute;
  border-color: var(--color0) var(--color0) transparent transparent;
  border-top-right-radius: 5px;
  font-size: var(--fsize);
}

.maquette .c:hover {
  z-index: 10;
}

.maquette .c.no + .c {
  border-radius: 0;
}
.maquette .c.no + .c > div {
  display: none;
}
.maquette .c.no {
  border-radius: 0;
  z-index: 9;
}
.maquette .c.no::before {
  content: "";
  background-color: var(--color2);
  position: absolute;
  height: calc(1.82 * 100% + 9px);
  width: calc(100% + 3px);
  top: calc(-1.82 * 100% - 6px);
  left: -3px;
  border-right: 3px solid var(--color0);
  pointer-events: none;
}

.maquette .c.zw::before,
.maquette .c.zw::after {
  content: "";
  position: absolute;
  pointer-events: none;
  --w: 8px;
}
.maquette .c.zw::before {
  width: var(--w);
  aspect-ratio: 1;
  border-radius: 999px;
  border: 1px solid var(--color1);
  top: calc(-100% - 3px);
  left: -2px;
}
.maquette .c.zw::after {
  width: 1px;
  background-color: var(--color1);
  --h: 25px;
  height: var(--h);
  top: calc(-100% - 2px - ((var(--h) - var(--w)) / 2));
  left: calc(var(--w) / 2 + 0.5px - 2px);
}

.maquette .tl {
  top: 0;
  left: 0;
  transform: rotate(90deg);
  --r: 90deg;
}
.maquette .tr {
  top: 0;
  right: 0;
  transform: rotate(180deg);
  --r: 180deg;
}
.maquette .br {
  bottom: 0;
  right: 0;
  transform: rotate(-90deg);
  --r: -90deg;
}
.maquette .bl {
  bottom: 0;
  left: 0;
  --r: 0deg;
}

/* .maquette .c > .v {
  position: absolute;
  --t: var(--asize);
  --w: var(--awidth);
  border-right: var(--w) solid var(--color1);
  transform: translateX(-50%);
}

.maquette .c > .v:nth-child(1) {
  left: calc(130% - (var(--w) / 2));
}

.maquette .c > .v:nth-child(2) {
  left: calc(170% - (var(--w) / 2));
}

.maquette .c > .v.d {
  top: var(--t);
  width: var(--w);
  height: calc(50% - var(--t));
}

.maquette .c > .v.l,
.maquette .c > .v.r {
  top: 0;
  width: calc(20% - var(--t));
  height: calc(50%);
  border-top: var(--w) solid var(--color1);
  border-top-right-radius: var(--t);
}
.maquette .c > .v.r {
  transform: scaleX(-1);
}

.maquette .c > .v::before {
  content: "";
  position: absolute;
  display: inline-block;
}

.maquette .c > .v.d::before {
  border-left: var(--t) solid transparent;
  border-right: var(--t) solid transparent;
  border-bottom: var(--t) solid var(--color1);
  top: calc(-1 * var(--t));
  left: calc(50% + (var(--w) / 2));
  transform: translateX(-50%);
}

.maquette .c > .v.l::before,
.maquette .c > .v.r::before {
  border-top: var(--t) solid transparent;
  border-right: var(--t) solid var(--color1);
  border-bottom: var(--t) solid transparent;
  top: calc((-1 * var(--t)) - (var(--w) / 2));
  left: calc(-1 * var(--t));
}

.maquette .c > .v::after {
  content: attr(value);
  position: absolute;
  font-weight: bold;
  color: var(--color3);
}

.maquette .c.bl > .v::after {
  top: calc(100% + var(--t));
  left: 50%;
  transform: rotate(calc(-1 * var(--r))) translateX(-50%);
}

.maquette .c.bl > .v.r::after {
  transform: rotate(calc(-1 * var(--r))) translateX(-50%) scaleX(-1);
}

.maquette .c.tl > .v::after {
  left: -0.25rem;
  top: calc(100% + var(--t));
  transform: rotate(calc(-1 * var(--r))) translateX(50%);
}

.maquette .c.tl > .v.r::after {
  transform: rotate(calc(-1 * var(--r))) translateX(50%) scaleY(-1);
}

.maquette .c.tr > .v::after {
  left: 0.1rem;
  top: calc(100% + var(--t));
  transform: rotate(calc(-1 * var(--r))) translateX(50%);
}

.maquette .c.tr > .v.r::after {
  transform: rotate(calc(-1 * var(--r))) translateX(50%) scaleX(-1);
}

.maquette .c.br > .v::after {
  left: -0.25rem;
  top: calc(100%);
  transform: rotate(calc(-1 * var(--r))) translateX(50%);
}
.maquette .c.br > .v.r::after {
  transform: rotate(calc(-1 * var(--r))) translateX(50%) scaleY(-1);
} */

/* ----------- */
.v,
.f {
  position: absolute;
  top: 0;
  --l: 15px;
  left: calc(100% + var(--l));
  background-color: var(--bcol);
  border: 1px solid var(--color1);
  width: 30%;
  --vhr: 1.5;
  aspect-ratio: 1 / var(--vhr);
  display: grid;
  place-items: center;
  --t: var(--asize);
  --w: var(--awidth);
  --h: 70%;
  box-sizing: border-box;
  cursor: pointer;
}

.f {
  left: calc(100% + (var(--l) / 2) + (var(--w) / 2));
  background-color: var(--color1);
  width: var(--w);
  height: calc(30% * var(--vhr));
  border: unset;
}

.f a {
  /* display: none; */
  position: absolute;
  /* top: calc(-1 * var(--h));
  right: calc(var(--l) / 4); */
  bottom: calc(-1 * var(--l));
}

.f wb,
.f wf {
  display: inline-block;
  width: 5px;
  aspect-ratio: 1;
  border: 1px solid var(--color1);
  transform: translateX(calc(-50% + var(--w) / 2));
  box-sizing: border-box;
  background-color: var(--color2);
}

.f wf {
  place-self: flex-end;
}
.f wb {
  place-self: flex-start;
}

.v::before,
.f::before {
  content: "";
  position: absolute;
  bottom: 100%;
  width: calc(50% + (var(--w) / 2));
  height: var(--h);
  border: var(--w) solid var(--color1);
  border-bottom-width: 0;
  /* border-top-left-radius: 5px; */
  box-sizing: border-box;
  pointer-events: none;
  cursor: default;
}
.f.l::before,
.f.r::before {
  width: 400%;
}

.v.r::before,
.f.r::before {
  border-right-width: 0;
}
.v.r::before {
  left: calc(50% - (var(--w) / 2));
}
.f.r::before {
  left: 0;
}
.v.d:before,
.f.d::before {
  border-left-width: 0;
  border-top-width: 0;
}
.v.l::before,
.f.l::before {
  border-left-width: 0;
}
.v.l::before,
.v.d:before {
  left: 0;
}
.f.l::before {
  right: 0;
  left: unset;
}
.f.r + .v.l::before {
  height: calc(var(--h) - 7px);
}

.v > *,
.f > * {
  pointer-events: none;
}

.tl a {
  transform: rotate(-90deg);
}
.tr a {
  transform: rotate(-180deg);
}
.br a {
  transform: rotate(90deg);
}

/* .content[type="B"]  */
.v.b > i {
  display: inline-block;
  position: absolute;
  /* height: var(--w); */
  height: 1px;
  /* top: calc(-1 * var(--w)); */
  top: -1px;
  /* left: 50%;
  width: calc(50% + var(--l) / 2); */
  left: 100%;
  /* width: 50%; */
  width: calc((var(--l) / 2) + (var(--w) / 2));
  background-color: var(--color1);
}

.v::after,
.f::after {
  content: "";
  position: absolute;
  pointer-events: none;
  cursor: default;
}

.v.d::after,
.f.d::after {
  border-left: var(--t) solid transparent;
  border-right: var(--t) solid transparent;
  border-bottom: var(--t) solid var(--color1);
  bottom: calc(100% + var(--h));
  transform: translateX(-50%);
  left: 50%;
}

.v.l::after,
.f.l::after {
  border-top: var(--t) solid transparent;
  border-right: var(--t) solid var(--color1);
  border-bottom: var(--t) solid transparent;
  bottom: calc((100% + var(--h)) - var(--t) - (var(--w) / 2));
  left: calc(-1 * var(--t));
}
.f.l::after {
  right: 400%;
  left: unset;
}
.v.r::after,
.f.r::after {
  border-top: var(--t) solid transparent;
  border-left: var(--t) solid var(--color1);
  border-bottom: var(--t) solid transparent;
  bottom: calc((100% + var(--h)) - var(--t) - (var(--w) / 2));
  left: 100%;
}
.f.r::after {
  left: 400%;
}

.f.r + .v.l::after {
  bottom: calc((100% + var(--h)) - var(--t) - (var(--w) / 2) - 7px);
}

.f ~ .v:nth-child(3):not(.b),
:not(.f) ~ .v:nth-child(2):not(.b),
:not(.f) ~ .v:nth-child(2):not(:last-child) {
  left: calc(130% + (var(--l) * 2));
}
.v:empty + .v:nth-child(3):not(:empty, .b) {
  left: 155%;
}

.content[type="S"] .v:not(:empty) + .v:nth-child(3) {
  display: none;
}
.content[type="S"] .v:nth-child(2):not(:empty) ~ .v.b:nth-child(4) {
  left: calc(100% + var(--l) + 5px);
}

/* .content[type="B"]  */
.v.b {
  top: calc(30% * var(--vhr) + 5px);
}
/* .content[type="B"]  */
.v.b::before {
  /* border-bottom-width: var(--w); */
  height: calc(100% + 5px + 45%);
  /* height: calc(100% + 2px + 45%); */
  left: calc(50% + (var(--l) / 2) + (var(--w) / 2));
  /* left: calc(100%); */
}

/* .content[type="B"]  */
.v.r.b::before {
  /* left: calc(100% + (var(--l) / 2)); */
  left: calc(100% + (var(--l) / 2) + (var(--w) / 2));
}

/* .content[type="B"]  */
.v.b.d::after {
  left: calc(100% + (var(--l) / 2) + (var(--w) / 2));
  bottom: calc(200% + 5px + 45%);
  /* bottom: calc(245% + 5px - 3px); */
}

/* .content[type="B"]  */
.v.b.l::after {
  left: calc(100% - (var(--t) / 2) + (var(--w) / 2));
  /* bottom: 245%; */
  /* bottom: calc(245% - 2px); */
  bottom: calc(245% - var(--t) + var(--w) / 2 + 3px);
}

/* .content[type="B"]  */
.v.b.r::after {
  left: calc(200% + var(--w));
  /* left: calc(200% - var(--w) * 2); */
  /* bottom: 245%; */
  /* bottom: calc(245% - 2px); */
  bottom: calc(245% - var(--t) + var(--w) / 2 + 3px);
}

/* for when first v is empty */
/* .content[type="B"]  */
.v:empty:nth-child(2) ~ .v.b i {
  display: none;
}
/* .content[type="B"]  */
.v:empty:nth-child(2) ~ .v.b.l::before {
  left: 0;
}
/* .content[type="B"]  */
.v:empty:nth-child(2) ~ .v.b.l::after {
  left: calc(-1 * var(--t));
}
/* .content[type="B"]  */
.v:empty:nth-child(2) ~ .v.b.r::before {
  left: calc(50% - (var(--w) / 2));
}
/* .content[type="B"]  */
.v:empty:nth-child(2) ~ .v.b.r::after {
  left: 100%;
}
/* .content[type="B"]  */
.v:empty:nth-child(2) ~ .v.b.d::before {
  left: 0;
}
/* .content[type="B"]  */
.v:empty:nth-child(2) ~ .v.b.d::after {
  left: 50%;
}
/* --------- */

.c > div:empty {
  background-color: var(--color3);
}

.c > div:empty::before,
.c > div:empty::after {
  display: none;
}
.c > div.f:empty {
  width: 8px;
  left: calc(100% + 5px);
}
/* ----------- */

.maquette > input {
  position: absolute;
  bottom: 10px;
  left: 50%;
  transform: translateX(-50%);
  appearance: none;
  display: inline-block;
  width: 85%;
  border-radius: 5px;
  color: var(--color1);
  text-align: center;
  border: 2px solid var(--color0);
  line-height: 1.5rem;
  opacity: 0.4;
  visibility: var(--mcinput);
}

.maquette > input:focus {
  outline: 2px solid orangered;
  opacity: 1;
}

.settings_container {
  position: fixed;
  top: 0;
  left: 0;
  height: 100vh;
  width: max(200px, 15vw);
  background-color: rgba(0, 0, 0, 0.3);
  font-weight: bold;
  display: grid;
  grid: min-content auto min-content / auto;
  transform: translateX(-100%);
  transition: transform 0.3s;
  z-index: 999;
}

.settings_container[open] {
  transform: none;
}

.settings_container > .title,
.settings_container > .about {
  background-color: rgba(119, 119, 119, 0.8);
  color: var(--color2);
  text-align: center;
  padding: 10px 0;
  box-shadow: -2px 0 0 2px #000;
  z-index: 1;
}

.settings_container > .title {
  font-size: 1.2rem;
}

settings {
  display: block;
  height: 100%;
  overflow-y: scroll;
  padding: 15px;
}

setting {
  display: block;
  margin-block: 10px;
}

setting > input,
setting > select {
  border-radius: 5px;
  line-height: 1.5;
  text-align: center;
  width: 100%;
  border: none;
}

setting > button,
#instructions button {
  appearance: none;
  border-radius: 5px;
  line-height: 1.5;
  background-color: #333;
  cursor: pointer;
  color: var(--color2);
  border: 1px solid #fff;
}

setting label {
  user-select: none;
}

.settings_container > .about {
  font-size: 0.9rem;
  cursor: pointer;
}

.settings_container > .about:hover {
  background-color: rgba(100, 100, 100, 0.8);
}

.toggler {
  display: grid;
  width: 40px;
  aspect-ratio: 1;
  box-shadow: 0 0 25px 0 #000;
  background-color: var(--color2);
  border: 3px solid #333;
  position: absolute;
  top: 50%;
  left: 100%;
  transform: translate(-30%, -50%);
  border-radius: 0 999px 999px 0;
  place-items: center;
  opacity: 0.5;
  cursor: pointer;
  transition: 0.3s;
}

.toggler::before {
  content: "";
  width: 30%;
  aspect-ratio: 1;
  border: 3px solid #000;
  border-bottom-width: 0;
  border-left-width: 0;
  transform-origin: center center;
  transform: rotate(45deg) translate(-15%, 15%);
}

.settings_container[open] .toggler::before {
  transform: rotate(-135deg) translate(-15%, 15%);
}

.settings_container[open] .toggler {
  transform: translate(-50%, -50%);
  border-radius: 999px;
}

#page-count {
  position: fixed;
  width: auto;
  padding: 5px 10px;
  background-color: #222;
  color: var(--color2);
  bottom: 10px;
  right: 10px;
  border-radius: 5px;
  cursor: default;
}

::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}
::-webkit-scrollbar-track {
  background-color: transparent;
}
::-webkit-scrollbar-thumb {
  background-color: #666;
  border-radius: 999px;
}

#instructions::backdrop {
  background-color: rgba(0, 0, 0, 0.3);
}

#instructions {
  animation: zoom_in 0.3s;
}

@keyframes zoom_in {
  from {
    transform: scale(0.7);
    opacity: 0;
  }
  to {
    transform: scale(1);
    opacity: 1;
  }
}

#instructions > div {
  text-align: center;
  font-weight: bold;
  font-size: 1.8rem;
  margin-bottom: 20px;
}

#instructions form {
  text-align: center;
  margin-top: 20px;
}
#instructions button {
  font-size: 1rem;
  padding: 5px 10px;
}

button:hover {
  background-color: var(--color2) !important;
  color: var(--color1) !important;
  border-color: var(--color1) !important;
}

#mce_downloader{
  display: none;
}
